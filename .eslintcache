[{"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\index.js":"1","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\components\\App.js":"2","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\components\\GlobalStyles.js":"3","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\components\\Header.js":"4","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\components\\Router.js":"5","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Detail\\index.js":"6","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Movie\\index.js":"7","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\TV\\index.js":"8","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Search\\index.js":"9","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Movie\\MovieContainer.js":"10","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Detail\\DetailContainer.js":"11","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\TV\\TvContainer.js":"12","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Search\\SearchContainer.js":"13","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Movie\\MoviePresenter.js":"14","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\TV\\TvPresenter.js":"15","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Search\\SearchPresenter.js":"16","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Detail\\DetailPresenter.js":"17","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\api.js":"18","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\components\\Section.js":"19","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\components\\Loader.js":"20","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\components\\Message.js":"21","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\components\\Poster.js":"22"},{"size":157,"mtime":1606891932580,"results":"23","hashOfConfig":"24"},{"size":186,"mtime":1606888909662,"results":"25","hashOfConfig":"24"},{"size":583,"mtime":1606884613639,"results":"26","hashOfConfig":"24"},{"size":1701,"mtime":1606883486197,"results":"27","hashOfConfig":"24"},{"size":829,"mtime":1606889005660,"results":"28","hashOfConfig":"24"},{"size":85,"mtime":1606876849424,"results":"29","hashOfConfig":"24"},{"size":82,"mtime":1606876877048,"results":"30","hashOfConfig":"24"},{"size":73,"mtime":1606876900421,"results":"31","hashOfConfig":"24"},{"size":85,"mtime":1606876888549,"results":"32","hashOfConfig":"24"},{"size":2654,"mtime":1606888831462,"results":"33","hashOfConfig":"24"},{"size":1539,"mtime":1606894980889,"results":"34","hashOfConfig":"24"},{"size":1164,"mtime":1606892909666,"results":"35","hashOfConfig":"24"},{"size":2394,"mtime":1606958412162,"results":"36","hashOfConfig":"24"},{"size":2729,"mtime":1606888210879,"results":"37","hashOfConfig":"24"},{"size":2742,"mtime":1606892923000,"results":"38","hashOfConfig":"24"},{"size":2636,"mtime":1606958003659,"results":"39","hashOfConfig":"24"},{"size":3337,"mtime":1606894253319,"results":"40","hashOfConfig":"24"},{"size":1052,"mtime":1606888026224,"results":"41","hashOfConfig":"24"},{"size":743,"mtime":1606883705720,"results":"42","hashOfConfig":"24"},{"size":381,"mtime":1606883564843,"results":"43","hashOfConfig":"24"},{"size":565,"mtime":1606883619584,"results":"44","hashOfConfig":"24"},{"size":1858,"mtime":1606883663664,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"glpiq7",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\index.js",[],["95","96"],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\components\\App.js",[],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\components\\GlobalStyles.js",[],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\components\\Header.js",[],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\components\\Router.js",["97"],"// 오로지 라우터만 관리하는 컴포넌트!\r\n\r\nimport React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\n\r\nimport Movie from \"../routes/Movie\";\r\nimport Detail from \"../routes/Detail\";\r\nimport Search from \"../routes/Search\";\r\nimport TV from \"../routes/TV\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      {/* switch의 역할: 하나의 router만 태우게 하기 위해서 */}\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Movie} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" exact component={Search} />\r\n        <Route path=\"/movie/:id\" exact component={Detail} />\r\n        <Route path=\"/show/:id\" exact component={Detail} />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Detail\\index.js",[],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Movie\\index.js",[],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\TV\\index.js",[],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Search\\index.js",[],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Movie\\MovieContainer.js",["98","99"],"import React from \"react\";\r\nimport MoviePresenter from \"./MoviePresenter\";\r\nimport { moviesApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  // 다섯개의 state가 필요하다 (세 종류의 데이터+로딩+에러)\r\n  // class component에서 state 만들기: 변수로 지정. 현재 state는 객체로 묶여져 있음.\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  // constructor: 생성자. 생성자의 매개변수로 부모component의 props가 들어옴.\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  // component가 부모compounent에 마운트 됐을 때 호출되는 함수.\r\n  // useEffect(()=>{}, [])와 같다.\r\n  // useEffect에서의 비동기처리는 async-await함수를 따로 호출했어야 하지만\r\n  // class component에서는 그저 앞에 async만 붙여주면 된다.\r\n  async componentDidMount() {\r\n    try {\r\n      // console.log로 data가 어떤 구조로 되어있는지 파악\r\n      // data > results에 원하는 내용이 있는 것을 확인\r\n      // ( {data: {results: [{}, {}, {}, ...]}} )\r\n      // unpacking: const {data:  {results}} = await moviesApi.nowPlaying();식으로 하면\r\n      // nowplaying, upcoming, popular이 다같은 results라는 변수를 가지게 된다.\r\n\r\n      // 해결 unpacking: results안에 있는 배열을 뽑아서 nowplaying에 집어넣는다.\r\n      // 같은표현: const nowPlaying = (await moviesApi.nowPlaying()).data.results\r\n      // cf. import { moviesApi } from \"../../api\"; 해주기\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n\r\n      // data 잘 불러오는지 확인하기\r\n      console.log(popular);\r\n\r\n      // data를 state에 집어넣기\r\n      this.setState({ nowPlaying, upcoming, popular });\r\n    } catch (error) {\r\n      this.setState({\r\n        error: \"영화정보를 찾을 수 없습니다.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // state는 현재 객체로 묶여져있으므로 unpacking:\r\n    // rendering할 때 불러오기:\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <MoviePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Detail\\DetailContainer.js",["100"],"import React from \"react\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  // 생성자에서 할 일\r\n  // state 관리\r\n  // pathname 받기\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // 1. id 가지고 오기 <-- match.params\r\n    //    id가 없다면 Movie로 강제이동 <-- history.push\r\n    //   cf. 리다이렉트: 사용자의 요청을 서버가 받고 재요청하도록 하는 것.\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n\r\n    let result = null;\r\n\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch (error) {\r\n      this.setState({\r\n        error: \"nothing to find\",\r\n      });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\TV\\TvContainer.js",["101"],"import React from \"react\";\r\nimport TvPresenter from \"./TvPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n\r\n    return (\r\n      <TvPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}","C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Search\\SearchContainer.js",["102","103","104"],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Movie\\MoviePresenter.js",[],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\TV\\TvPresenter.js",[],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Search\\SearchPresenter.js",["105"],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\routes\\Detail\\DetailPresenter.js",[],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\api.js",[],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\components\\Section.js",[],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\components\\Loader.js",[],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\components\\Message.js",[],"C:\\Users\\kim\\Desktop\\React-workspace\\bitflix\\src\\components\\Poster.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":12,"column":1,"nodeType":"112","endLine":26,"endColumn":3},{"ruleId":"110","severity":1,"message":"113","line":5,"column":1,"nodeType":"112","endLine":76,"endColumn":2},{"ruleId":"114","severity":1,"message":"115","line":17,"column":3,"nodeType":"116","messageId":"117","endLine":19,"endColumn":4},{"ruleId":"110","severity":1,"message":"113","line":5,"column":1,"nodeType":"112","endLine":63,"endColumn":2},{"ruleId":"110","severity":1,"message":"113","line":5,"column":1,"nodeType":"112","endLine":57,"endColumn":2},{"ruleId":"110","severity":1,"message":"113","line":5,"column":1,"nodeType":"112","endLine":87,"endColumn":2},{"ruleId":"118","severity":2,"message":"119","line":26,"column":7,"nodeType":"120","messageId":"121","endLine":26,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":69,"column":3,"nodeType":"116","messageId":"117","endLine":71,"endColumn":4},{"ruleId":"122","severity":1,"message":"123","line":71,"column":37,"nodeType":"124","messageId":"125","endLine":71,"endColumn":39},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous class","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]